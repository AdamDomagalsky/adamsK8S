# This is a basic workflow to help you get started with Actions

name: Terraform

# Controls when the workflow will run
on: workflow_dispatch
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VAR_AZURE_SUBSCRIPTION_ID: ${{ secrets.TF_VAR_AZURE_SUBSCRIPTION_ID }}
      TF_VAR_DNS_PREFIX : ${{ secrets.TF_VAR_DNS_PREFIX }}
      TF_VAR_ENV : ${{ secrets.TF_VAR_ENV }}
      TF_VAR_LOCATION : ${{ secrets.TF_VAR_LOCATION }}
      TF_VAR_RESOURCE_GROUP_NAME : ${{ secrets.TF_VAR_RESOURCE_GROUP_NAME }}
      TF_VAR_UNIQ_NAME : ${{ secrets.TF_VAR_UNIQ_NAME }}
      TF_VAR_SA_ACCOUNT_NAME: ${{ secrets.TF_VAR_SA_ACCOUNT_NAME }}
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "./terraform/azure"
         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform/azure"
        args: '-backend-config "storage_account_name=${{ secrets.TF_VAR_SA_ACCOUNT_NAME }}" -backend-config "resource_group_name=${{ secrets.TF_VAR_RESOURCE_GROUP_NAME }}"'
      env:
        TF_VAR_SA_ACCOUNT_NAME: ${{ secrets.TF_VAR_SA_ACCOUNT_NAME }}
        TF_VAR_RESOURCE_GROUP_NAME: ${{ secrets.TF_VAR_RESOURCE_GROUP_NAME }}
 
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform/azure"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform/azure"
        args: '-var SA_ACCOUNT_NAME=${{ secrets.TF_VAR_SA_ACCOUNT_NAME }}'
        TF_VAR_SA_ACCOUNT_NAME: ${{ secrets.TF_VAR_SA_ACCOUNT_NAME }}

# terraform import azurerm_resource_group.AZ-RG-MW-Sandbox-01 /subscriptions/6939ec6c-6633-41b1-bbd0-399e20260db0/resourceGroups/AZ-RG-MW-Sandbox-01

    # - name: Terraform Import
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'import'
    #     args: "azurerm_resource_group.AZ-RG-MW-Sandbox-01 /subscriptions/6939ec6c-6633-41b1-bbd0-399e20260db0/resourceGroups/AZ-RG-MW-Sandbox-01"
    #     tf_actions_working_dir: "./terraform/azure"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform/azure"
        args: '-var SA_ACCOUNT_NAME=${{ secrets.TF_VAR_SA_ACCOUNT_NAME }}'
      env:
        TF_VAR_SA_ACCOUNT_NAME: ${{ secrets.TF_VAR_SA_ACCOUNT_NAME }}


    # - name: 'Terraform Output'
    #   id: terraform
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'output'
    #     tf_actions_working_dir: "./terraform/azure"
    # - name: 'Use Terraform Output'
    #   run: echo ${{ steps.terraform.outputs.tf_actions_output }}
